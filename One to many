Hereâ€™s the updated code incorporating your requested changes:

Updates Implemented:

1. One-to-Many Mapping between Employee and EmploymentHistory.


2. ElementCollection for skills (already done).


3. Embedded Address class inside Employee.




---

Updated Employee Entity:

package com.example.mappings.entity;

import jakarta.persistence.*;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Entity
@Table(name = "employee")
public class Employee {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private int id;

    @Column(name = "name")
    private String name;

    @Column(name = "email")
    private String email;

    @ElementCollection
    @CollectionTable(name = "employee_skills", joinColumns = @JoinColumn(name = "employee_id"))
    @Column(name = "skill")
    private Set<String> skills = new HashSet<>();

    @OneToMany(mappedBy = "employee", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<EmploymentHistory> employmentHistories;

    @Embedded
    private Address address;

    public Employee() {
    }

    public Employee(String name, String email, Set<String> skills, List<EmploymentHistory> employmentHistories, Address address) {
        this.name = name;
        this.email = email;
        this.skills = skills;
        this.employmentHistories = employmentHistories;
        this.address = address;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Set<String> getSkills() {
        return skills;
    }

    public void setSkills(Set<String> skills) {
        this.skills = skills;
    }

    public List<EmploymentHistory> getEmploymentHistories() {
        return employmentHistories;
    }

    public void setEmploymentHistories(List<EmploymentHistory> employmentHistories) {
        this.employmentHistories = employmentHistories;
    }

    public Address getAddress() {
        return address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    @Override
    public String toString() {
        return "Employee{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", email='" + email + '\'' +
                ", skills=" + skills +
                ", employmentHistories=" + employmentHistories +
                ", address=" + address +
                '}';
    }
}


---

New EmploymentHistory Entity (One-to-Many with Employee):

package com.example.mappings.entity;

import jakarta.persistence.*;

@Entity
@Table(name = "employment_history")
public class EmploymentHistory {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    @Column(name = "company_name")
    private String companyName;

    @Column(name = "job_title")
    private String jobTitle;

    @Column(name = "years_of_experience")
    private int yearsOfExperience;

    @ManyToOne
    @JoinColumn(name = "employee_id")
    private Employee employee;

    public EmploymentHistory() {
    }

    public EmploymentHistory(String companyName, String jobTitle, int yearsOfExperience, Employee employee) {
        this.companyName = companyName;
        this.jobTitle = jobTitle;
        this.yearsOfExperience = yearsOfExperience;
        this.employee = employee;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getCompanyName() {
        return companyName;
    }

    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    public String getJobTitle() {
        return jobTitle;
    }

    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    public int getYearsOfExperience() {
        return yearsOfExperience;
    }

    public void setYearsOfExperience(int yearsOfExperience) {
        this.yearsOfExperience = yearsOfExperience;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public String toString() {
        return "EmploymentHistory{" +
                "id=" + id +
                ", companyName='" + companyName + '\'' +
                ", jobTitle='" + jobTitle + '\'' +
                ", yearsOfExperience=" + yearsOfExperience +
                '}';
    }
}


---

New Address Class (Embedded in Employee):

package com.example.mappings.entity;

import jakarta.persistence.Embeddable;

@Embeddable
public class Address {

    private String street;
    private String city;
    private String state;
    private String zipCode;

    public Address() {
    }

    public Address(String street, String city, String state, String zipCode) {
        this.street = street;
        this.city = city;
        this.state = state;
        this.zipCode = zipCode;
    }

    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public String getZipCode() {
        return zipCode;
    }

    public void setZipCode(String zipCode) {
        this.zipCode = zipCode;
    }

    @Override
    public String toString() {
        return "Address{" +
                "street='" + street + '\'' +
                ", city='" + city + '\'' +
                ", state='" + state + '\'' +
                ", zipCode='" + zipCode + '\'' +
                '}';
    }
}


---

JSON Input for Creating an Employee:

{
  "name": "John Doe",
  "email": "john.doe@example.com",
  "skills": ["Java", "Spring Boot", "SQL"],
  "employmentHistories": [
    {
      "companyName": "TechCorp",
      "jobTitle": "Software Engineer",
      "yearsOfExperience": 3
    },
    {
      "companyName": "InnoSoft",
      "jobTitle": "Senior Developer",
      "yearsOfExperience": 5
    }
  ],
  "address": {
    "street": "123 Main St",
    "city": "New York",
    "state": "NY",
    "zipCode": "10001"
  }
}


---

Now your Employee entity:

Stores skills using @ElementCollection.

Has one-to-many mapping with EmploymentHistory.

Includes Address as an embedded class.


Let me know if you need any modifications!

